require "../spec_helper"

Spectator.describe Proton::MTProto::Authentication do
  let(step1_random) { Bytes[
    134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119, 241,
  ] }

  let(step1_request) { Bytes[
    241, 142, 126, 190, 134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119,
    241,
  ] }

  let(step1_response) { Bytes[
    99, 36, 22, 5, 134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119, 241,
    228, 177, 254, 82, 43, 118, 73, 81, 104, 145, 116, 35, 87, 201, 106, 26, 8, 32, 205,
    60, 176, 88, 123, 221, 113, 0, 0, 0, 21, 196, 181, 28, 2, 0, 0, 0, 2, 159, 75, 161,
    109, 16, 146, 150, 33, 107, 232, 108, 2, 43, 180, 195,
  ] }

  let(step2_random) { Bytes[
    195, 148, 155, 120, 117, 242, 246, 19, 173, 110, 1, 18, 37, 133, 31, 132, 117, 162,
    226, 123, 6, 212, 126, 236, 148, 118, 40, 186, 21, 170, 122, 88, 123, 254, 46, 210,
    146, 11, 166, 205, 231, 146, 132, 135, 204, 245, 55, 238, 59, 159, 201, 99, 222, 189,
    69, 220, 43, 133, 113, 163, 190, 131, 95, 64, 4, 87, 41, 22, 197, 231, 172, 96, 196,
    121, 211, 108, 106, 186, 218, 231, 178, 214, 111, 115, 58, 217, 70, 44, 13, 52, 75,
    134, 150, 252, 149, 170, 103, 128, 41, 191, 26, 17, 173, 200, 58, 94, 252, 120, 41,
    161, 163, 114, 205, 218, 62, 41, 45, 242, 135, 6, 238, 16, 85, 23, 210, 215, 156, 13,
    159, 66, 158, 102, 208, 142, 51, 192, 16, 6, 126, 202, 155, 135, 131, 153, 56, 35, 180,
    25, 109, 70, 246, 210, 16, 26, 7, 246, 131, 3, 7, 82, 239, 131, 171, 222, 152, 232,
    189, 163, 184, 120, 132, 246, 123, 43, 102, 235, 3, 49, 165, 22, 65, 236, 26, 144, 88,
    101, 40, 60, 140, 182, 190, 202, 78, 109, 224, 139, 243, 244, 131, 133, 252, 61, 253,
    118, 56, 37, 159, 53, 48, 61, 181, 202, 217, 127, 179, 147, 143, 0, 217, 78, 170, 31,
    136, 64, 60, 71, 30, 19, 86, 40, 49, 59, 53, 155, 103, 64, 148, 91, 130, 171, 157, 166,
    31, 250, 122, 94, 236, 148, 106, 100, 134, 57, 71, 145, 160, 156, 10, 185, 84, 14, 1,
    86, 180, 28, 250, 191, 116, 241, 71, 127, 46, 146, 110, 54, 6, 146, 56, 126, 186, 127,
    233, 31, 24, 244, 97, 182, 51, 135,
  ] }

  let(step2_request) { Bytes[
    190, 228, 18, 215, 134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119,
    241, 228, 177, 254, 82, 43, 118, 73, 81, 104, 145, 116, 35, 87, 201, 106, 26, 4, 90,
    137, 157, 155, 0, 0, 0, 4, 92, 191, 167, 227, 0, 0, 0, 33, 107, 232, 108, 2, 43, 180,
    195, 254, 0, 1, 0, 108, 15, 183, 223, 98, 253, 52, 254, 33, 51, 7, 255, 120, 46, 98,
    25, 200, 152, 153, 127, 129, 192, 53, 250, 55, 99, 90, 91, 88, 88, 145, 138, 201, 148,
    173, 47, 119, 70, 24, 31, 124, 57, 121, 66, 76, 29, 220, 225, 124, 23, 78, 157, 52, 1,
    46, 73, 39, 97, 227, 66, 124, 206, 155, 142, 208, 189, 188, 70, 42, 235, 83, 198, 157,
    144, 47, 6, 162, 29, 172, 91, 153, 193, 227, 173, 175, 197, 164, 200, 26, 63, 3, 196,
    102, 117, 230, 30, 208, 188, 36, 62, 54, 131, 204, 90, 37, 11, 166, 255, 226, 89, 108,
    159, 187, 107, 66, 13, 62, 240, 146, 0, 21, 29, 131, 180, 88, 152, 43, 231, 128, 234,
    92, 70, 45, 54, 155, 64, 253, 105, 207, 135, 185, 242, 254, 87, 236, 3, 99, 107, 63,
    248, 5, 144, 13, 180, 217, 60, 31, 64, 82, 231, 103, 217, 186, 176, 139, 155, 147, 11,
    168, 55, 85, 86, 8, 229, 67, 62, 227, 51, 168, 33, 192, 214, 228, 161, 17, 184, 38,
    120, 193, 31, 87, 116, 224, 159, 210, 122, 64, 9, 243, 119, 158, 4, 26, 111, 255, 44,
    133, 76, 217, 142, 231, 29, 243, 61, 145, 104, 243, 85, 126, 206, 23, 24, 33, 229, 45,
    181, 113, 120, 85, 134, 179, 210, 107, 8, 13, 162, 248, 69, 51, 69, 218, 199, 12, 104,
    51, 70, 64, 254, 100, 34, 14, 138, 121, 228, 240, 34,
  ] }

  let(step2_response) { Bytes[
    92, 7, 232, 208, 134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119,
    241, 228, 177, 254, 82, 43, 118, 73, 81, 104, 145, 116, 35, 87, 201, 106, 26, 254, 80,
    2, 0, 58, 77, 67, 36, 153, 27, 168, 93, 247, 39, 91, 145, 230, 1, 236, 4, 36, 167, 96,
    38, 89, 49, 229, 19, 80, 71, 31, 51, 114, 5, 160, 2, 248, 43, 199, 59, 217, 29, 132,
    30, 119, 111, 40, 31, 22, 180, 147, 73, 171, 112, 90, 235, 86, 66, 206, 175, 169, 28,
    63, 143, 24, 173, 113, 6, 168, 61, 91, 226, 157, 24, 55, 216, 115, 12, 241, 163, 253,
    222, 83, 102, 119, 136, 36, 88, 191, 20, 23, 20, 38, 4, 192, 228, 133, 0, 148, 24, 54,
    119, 50, 198, 208, 199, 99, 226, 83, 57, 60, 108, 185, 67, 55, 125, 193, 216, 181, 142,
    69, 121, 34, 44, 144, 191, 87, 100, 51, 53, 222, 86, 225, 164, 59, 137, 147, 212, 92,
    220, 23, 101, 223, 115, 97, 124, 217, 187, 91, 42, 255, 221, 59, 167, 11, 37, 226, 70,
    14, 223, 239, 175, 128, 161, 64, 5, 12, 196, 35, 185, 16, 73, 15, 41, 166, 1, 102, 217,
    216, 232, 170, 242, 93, 250, 155, 133, 179, 41, 89, 26, 10, 169, 211, 225, 223, 196,
    115, 225, 211, 126, 116, 227, 254, 249, 87, 187, 11, 53, 210, 195, 163, 84, 13, 185,
    146, 166, 73, 198, 9, 145, 197, 93, 97, 137, 216, 80, 33, 242, 162, 15, 22, 9, 74, 158,
    11, 44, 136, 208, 165, 62, 196, 5, 199, 87, 115, 244, 47, 216, 16, 254, 109, 75, 1,
    100, 66, 213, 113, 147, 84, 214, 4, 202, 87, 0, 25, 7, 146, 202, 56, 104, 19, 74, 242,
    174, 249, 29, 186, 200, 204, 143, 220, 130, 230, 34, 94, 131, 208, 164, 210, 154, 153,
    146, 60, 21, 30, 35, 74, 32, 136, 130, 89, 17, 214, 20, 62, 106, 204, 16, 101, 159, 49,
    243, 123, 126, 168, 251, 221, 130, 209, 129, 96, 44, 48, 76, 65, 78, 135, 140, 204, 9,
    90, 50, 7, 24, 129, 159, 92, 104, 140, 36, 201, 30, 94, 10, 13, 74, 148, 44, 182, 76,
    6, 76, 157, 214, 237, 52, 125, 87, 181, 205, 188, 117, 210, 77, 73, 152, 3, 172, 168,
    235, 90, 237, 195, 35, 28, 142, 194, 22, 137, 227, 252, 61, 209, 120, 156, 82, 246, 30,
    231, 179, 191, 83, 192, 239, 244, 33, 222, 72, 58, 55, 83, 83, 105, 23, 90, 195, 45,
    50, 66, 38, 169, 212, 44, 52, 37, 126, 64, 18, 39, 106, 125, 112, 250, 121, 139, 85,
    171, 161, 59, 183, 252, 249, 159, 77, 246, 58, 192, 254, 164, 84, 226, 242, 241, 69,
    125, 14, 45, 198, 54, 0, 145, 212, 247, 214, 11, 54, 76, 200, 215, 7, 239, 81, 24, 206,
    61, 241, 136, 223, 214, 52, 13, 251, 206, 180, 176, 243, 119, 126, 218, 128, 192, 197,
    202, 163, 2, 178, 65, 210, 49, 188, 239, 72, 242, 49, 55, 0, 193, 90, 133, 112, 161,
    135, 86, 47, 136, 224, 16, 121, 7, 98, 79, 34, 225, 224, 98, 64, 128, 248, 159, 225,
    99, 99, 53, 194, 168, 208, 176, 38, 151, 219, 20, 60, 48, 46, 250, 36, 66, 154, 202,
    12, 239, 51, 1, 64, 43, 238, 81, 154, 225, 29, 139, 54, 2, 37, 232, 28, 165, 185, 78,
    57, 193, 206, 147, 204, 228, 222, 200, 37, 156, 20, 206, 246, 170, 2, 26, 161, 195,
    227, 181, 118, 210, 110, 37, 61, 99, 14, 168, 189, 250, 40, 239, 69, 232, 105, 207,
    235,
  ] }

  let(step3_random) { Bytes[
    71, 146, 122, 10, 27, 21, 98, 145, 20, 44, 248, 247, 59, 3, 41, 161, 204, 108, 222,
    159, 182, 237, 137, 19, 53, 175, 250, 195, 62, 8, 58, 127, 238, 218, 95, 111, 233, 213,
    225, 87, 225, 157, 201, 19, 98, 60, 54, 204, 30, 211, 135, 97, 99, 8, 232, 249, 51,
    242, 7, 152, 152, 36, 124, 233, 93, 240, 43, 196, 97, 108, 116, 132, 41, 23, 24, 188,
    221, 3, 148, 27, 102, 82, 175, 226, 148, 95, 66, 29, 215, 67, 213, 31, 114, 233, 174,
    234, 204, 12, 117, 217, 31, 75, 50, 32, 204, 201, 218, 245, 236, 61, 113, 143, 94, 42,
    245, 95, 24, 34, 189, 6, 28, 238, 193, 192, 94, 72, 176, 9, 254, 20, 186, 22, 180, 132,
    79, 164, 33, 43, 202, 241, 85, 93, 31, 86, 91, 250, 134, 45, 119, 250, 109, 76, 244,
    85, 242, 93, 172, 83, 125, 5, 187, 70, 131, 67, 45, 122, 236, 168, 77, 113, 63, 218,
    34, 190, 227, 11, 214, 100, 190, 139, 57, 30, 150, 240, 156, 44, 113, 146, 182, 29,
    209, 178, 235, 48, 192, 6, 25, 83, 194, 140, 69, 14, 111, 98, 30, 100, 147, 58, 19,
    249, 65, 105, 232, 169, 78, 10, 234, 218, 125, 180, 12, 177, 1, 207, 119, 162, 96, 174,
    105, 106, 9, 165, 110, 64, 157, 105, 113, 132, 109, 64, 230, 39, 236, 130, 24, 151,
    137, 44, 92, 239, 60, 20, 227, 18, 43, 131, 182, 32, 130, 22, 0, 81, 255, 206, 147,
    219, 234, 93, 175, 135, 214, 30,
  ] }

  let(step3_request) { Bytes[
    31, 95, 4, 245, 134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119, 241,
    228, 177, 254, 82, 43, 118, 73, 81, 104, 145, 116, 35, 87, 201, 106, 26, 254, 80, 1, 0,
    37, 116, 53, 109, 137, 150, 112, 137, 180, 146, 216, 87, 151, 235, 7, 74, 192, 156,
    169, 188, 70, 225, 9, 98, 86, 152, 15, 85, 162, 27, 242, 231, 228, 187, 36, 86, 151,
    88, 55, 36, 195, 11, 120, 162, 45, 78, 40, 29, 38, 247, 206, 253, 210, 15, 19, 180, 37,
    212, 202, 249, 104, 62, 1, 15, 244, 121, 194, 238, 135, 134, 140, 175, 193, 244, 117,
    92, 237, 101, 101, 154, 103, 143, 15, 39, 104, 13, 96, 233, 31, 154, 15, 128, 63, 37,
    100, 165, 167, 65, 157, 212, 123, 241, 33, 130, 198, 212, 140, 249, 250, 84, 159, 137,
    15, 138, 99, 175, 252, 112, 75, 7, 113, 5, 47, 72, 24, 211, 229, 210, 57, 232, 187,
    248, 96, 142, 92, 238, 155, 239, 178, 188, 77, 217, 15, 23, 192, 127, 96, 140, 174,
    223, 90, 78, 92, 254, 148, 255, 77, 118, 82, 78, 48, 207, 10, 2, 138, 23, 227, 113,
    251, 245, 247, 118, 226, 242, 245, 244, 7, 96, 35, 195, 13, 53, 211, 179, 127, 195,
    185, 3, 122, 64, 182, 116, 222, 103, 188, 206, 182, 74, 2, 94, 161, 149, 161, 248, 173,
    92, 225, 89, 233, 110, 125, 153, 172, 156, 117, 214, 251, 235, 77, 110, 22, 230, 184,
    233, 218, 51, 12, 37, 43, 11, 100, 164, 78, 25, 112, 131, 76, 211, 99, 113, 22, 206,
    83, 51, 164, 5, 155, 60, 83, 248, 100, 71, 104, 189, 141, 114, 248, 60, 6, 74, 151,
    141, 93, 136, 179, 107, 182, 78, 134, 62, 119, 5, 19, 101, 155, 184, 141, 41, 68, 233,
    73, 255, 100, 135, 117, 230, 238, 231, 141, 162, 225, 118, 101, 204, 182, 36, 155, 119,
    70, 120, 211, 117, 173, 217, 240, 4, 200, 175, 151, 65, 3, 255, 52, 1, 210, 18, 130,
    194, 191, 27, 247, 194, 143, 152, 195, 239, 172, 241, 121, 86, 99, 20, 89, 239, 228,
    193,
  ] }

  let(step3_response) { Bytes[
    52, 247, 203, 59, 134, 212, 37, 230, 70, 13, 226, 160, 72, 38, 51, 17, 95, 143, 119,
    241, 228, 177, 254, 82, 43, 118, 73, 81, 104, 145, 116, 35, 87, 201, 106, 26, 22, 71,
    136, 56, 52, 202, 123, 253, 226, 115, 162, 78, 56, 200, 200, 179,
  ] }

  let(expected_auth_key) { Bytes[
    11, 26, 74, 209, 176, 167, 145, 139, 118, 63, 183, 39, 60, 35, 202, 64, 8, 220, 16,
    122, 140, 136, 138, 125, 231, 86, 235, 147, 133, 3, 136, 229, 192, 82, 160, 237, 54,
    129, 102, 118, 132, 204, 151, 124, 58, 248, 245, 193, 190, 43, 162, 121, 84, 160, 147,
    10, 58, 227, 70, 51, 51, 48, 83, 130, 184, 5, 192, 135, 138, 167, 41, 203, 43, 228,
    182, 139, 114, 9, 93, 150, 220, 45, 53, 250, 96, 82, 171, 152, 165, 231, 3, 4, 216,
    141, 106, 150, 6, 230, 36, 197, 230, 222, 132, 148, 173, 139, 14, 87, 200, 183, 198,
    98, 144, 208, 26, 159, 253, 109, 17, 111, 183, 88, 94, 111, 242, 5, 88, 253, 154, 64,
    27, 47, 146, 82, 241, 158, 245, 232, 74, 163, 132, 141, 26, 157, 16, 20, 80, 19, 166,
    118, 140, 248, 81, 223, 218, 233, 0, 199, 245, 49, 142, 38, 35, 168, 169, 171, 205,
    111, 59, 229, 10, 167, 139, 159, 217, 64, 164, 157, 46, 250, 196, 61, 221, 132, 156,
    208, 38, 246, 24, 86, 208, 18, 30, 19, 21, 215, 193, 145, 210, 179, 10, 99, 219, 237,
    22, 11, 95, 71, 78, 106, 140, 112, 79, 244, 76, 185, 16, 216, 151, 2, 213, 203, 209,
    232, 130, 22, 237, 67, 21, 10, 239, 11, 170, 137, 36, 183, 28, 54, 125, 172, 97, 100,
    215, 159, 48, 24, 243, 221, 6, 142, 52, 189, 179, 18, 63, 224,
  ] }

  it "performs successful auth key gen" do
    req, data = described_class.do_step1(step1_random)
    expect(req).to eq(step1_request)
    response = step1_response

    req, data = described_class.do_step2(data, response, step2_random)
    expect(req).to eq(step2_request)
    response = step2_response

    step3_now = 1580236449
    req, data = described_class.do_step3(data, response, step3_random, step3_now)
    expect(req).to eq(step3_request)
    response = step3_response

    finished = described_class.create_key(data, response)
    expected = Proton::MTProto::Authentication::Finished.new(
      auth_key: Proton::Crypto::AuthKey.from_bytes(expected_auth_key),
      time_offset: 0,
      first_salt: 4809708467028043047)
    expect(finished).to eq(expected)
  end
end
